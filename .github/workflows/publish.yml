name: Publish
on:
  workflow_dispatch:
  push:
    branches: [ main ]
jobs:
  documents:
    name: Collect Documents
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Determine Scope
        id: scope
        run: "[[ '${{ github.event_name }}' == 'workflow_dispatch' ]] && echo 'scope=all' >>$GITHUB_OUTPUT || echo 'scope=changed' >>$GITHUB_OUTPUT"
      - name: Collect Documents
        id: documents
        run: .github/collect-documents.sh ${{ steps.scope.outputs.scope }}
    outputs:
      documents: ${{ steps.documents.outputs.documents }}
  build:
    name: Build Document
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tudalgo/algotex:latest
    needs: documents
    if: needs.documents.outputs.documents != '[]'
    defaults:
      run:
        working-directory: .
        shell: bash
    strategy:
      matrix:
        document: ${{ fromJSON(needs.documents.outputs.documents) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Python
        run: |
          apt update && apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev curl libbz2-dev -y
          curl -O https://www.python.org/ftp/python/3.8.19/Python-3.8.19.tar.xz
          tar -xf Python-3.8.19.tar.xz
          cd Python-3.8.19
          ./configure --disable-option-checking
          make -j
          make altinstall
          cd ..
          update-alternatives --install /usr/bin/python python /usr/local/bin/python3.8 1
          update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.8 1
          rm -rf Python-3.8.19
      - name: Install Python Dependencies
        run: "pip install -f https://download.pytorch.org/whl/torch_stable.html -r sys/requirements.txt"
      - name: Install fdsummary pkg
        run: |
          ln -s "$(pwd)/pkg" "$(kpsewhich -var-value=TEXMFDIST)/tex/latex/fdsummary"
          texhash --verbose
      - name: Build Document (Light Mode)
        id: build-light
        run: .github/build-document.sh ${{ matrix.document }}
      - name: Upload Artifact (Light Mode)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.document }}
          path: ${{ steps.build-light.outputs.artifact_path }}
      - name: Build Document (Dark Mode)
        id: build-dark
        run: .github/build-document.sh ${{ matrix.document }}
        env:
          DARK_MODE: 1
      - name: Upload Artifact (Dark Mode)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.document }} dark
          path: ${{ steps.build-dark.outputs.artifact_path }}
  publish:
    name: Publish Documents
    runs-on: ubuntu-latest
    needs:
      - documents
      - build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Fix Document Paths
        run: ".github/move-documents.sh '${{ needs.documents.outputs.documents }}'"
      - name: Publish Documents
        run: ".github/publish-documents.sh"
        env:
          gh_user: ${{ secrets.PUBLISH_GH_USER }}
          gh_token: ${{ secrets.PUBLISH_GH_TOKEN }}
